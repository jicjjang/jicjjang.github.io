{"version":3,"sources":["webpack:///./src/pages/archive.tsx"],"names":["BASE_YEAR","Date","getFullYear","YEAR_KEYS","Array","from","length","_","index","StyledLink","styled","Link","Archive","data","pLocation","location","posts","allMarkdownRemark","edges","forEach","currentValue","node","frontmatter","date","push","slug","fields","title","pathname","map","yearKey","key","style","marginBottom","scale","rhythm","post","to","tags","isInlineBlock","query"],"mappings":"sSAaMA,GAAY,IAAIC,MAAOC,cAEvBC,EAAYC,MAAMC,KAAK,CAAEC,OAAQN,EADtB,KAC6C,IAAK,SAACO,EAAGC,GAAJ,OAAcR,EAAYQ,KAEvFC,EAAaC,YAAOC,KAAV,0EAAGD,CAAH,wEASD,SAASE,EAAT,GAA2D,IAAxCC,EAAwC,EAAxCA,KAAgBC,EAAwB,EAAlCC,SAChCC,EAAQ,GAYd,OAXCH,EAAeI,kBAAkBC,MAAMC,SAAQ,SAAAC,GAAgB,UACb,EAA5CJ,EAAK,UAACI,EAAaC,KAAKC,mBAAnB,aAAC,EAA+BC,QACxCP,EAAK,UAACI,EAAaC,KAAKC,mBAAnB,aAAC,EAA+BC,MAAQ,IAG/CP,EAAK,UAACI,EAAaC,KAAKC,mBAAnB,aAAC,EAA+BC,MAAMC,KAA3C,iBACKJ,EAAaC,KAAKC,YADvB,CAEEG,KAAI,UAAEL,EAAaC,KAAKK,cAApB,aAAE,EAA0BD,WAKlC,gBAAC,IAAD,CAAeE,MA7BL,UA6BmBC,SAAUd,EAAUc,UAC9CzB,EAAU0B,KACT,SAAAC,GAAO,OACLd,EAAMc,IACJ,uBACEC,IAAKD,EACLE,MAAO,CACLC,aAAc,SAEhB,gBAAC,IAAD,CAAqBC,MAAOA,YAAM,IAAMC,OAAQA,YAAO,KACpDL,GAEFd,EAAMc,GAASD,KAAI,SAACO,EAAiB5B,GAAlB,aAClB,uBAAKuB,IAAKK,EAAKT,OAASnB,GACtB,gCACE,gBAACC,EAAD,CAAY4B,GAAID,EAAKX,MAAQW,EAAKT,QACjC,UAAAS,EAAKE,YAAL,eAAWhC,SAAU,gBAAC,IAAD,CAAUgC,KAAMF,EAAKE,KAAMC,eAAe,cAW7E,IAAMC,EAAQ","file":"component---src-pages-archive-tsx-99be44bcab8534ccb1c0.js","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { PageProps, graphql } from 'gatsby';\n\nimport { scale, rhythm } from '~/configs/typography';\nimport DefaultLayout from '~/components/layout/Default';\nimport { Query, MarkdownRemarkFields, MarkdownRemarkFrontmatter } from '~/gatsby-graphql-types';\nimport { StyledCommonH1Title } from '~/components/common';\nimport PostTags from '~/components/PostTags';\n\nconst TITLE = 'Archive';\n\nconst BASE_YEAR = new Date().getFullYear();\nconst MIN_YEAR = 2015;\nconst YEAR_KEYS = Array.from({ length: BASE_YEAR - MIN_YEAR + 1 }, (_, index) => BASE_YEAR - index);\n\nconst StyledLink = styled(Link)`\n  margin-right: 10px;\n  box-shadow: none;\n  text-decoration: none;\n  color: #000;\n`;\n\ntype IPostType = MarkdownRemarkFields & MarkdownRemarkFrontmatter;\n\nexport default function Archive({ data, location: pLocation }: PageProps) {\n  const posts = {};\n  (data as Query).allMarkdownRemark.edges.forEach(currentValue => {\n    if (!posts[currentValue.node.frontmatter?.date]) {\n      posts[currentValue.node.frontmatter?.date] = [];\n    }\n\n    posts[currentValue.node.frontmatter?.date].push({\n      ...currentValue.node.frontmatter,\n      slug: currentValue.node.fields?.slug\n    });\n  });\n\n  return (\n    <DefaultLayout title={TITLE} pathname={pLocation.pathname}>\n      {YEAR_KEYS.map(\n        yearKey =>\n          posts[yearKey] && (\n            <div\n              key={yearKey}\n              style={{\n                marginBottom: '20px'\n              }}>\n              <StyledCommonH1Title scale={scale(0.5)} rhythm={rhythm(0.2)}>\n                {yearKey}\n              </StyledCommonH1Title>\n              {posts[yearKey].map((post: IPostType, index: number) => (\n                <div key={post.title || index}>\n                  <>\n                    <StyledLink to={post.slug!}>{post.title}</StyledLink>\n                    {post.tags?.length && <PostTags tags={post.tags} isInlineBlock={true} />}\n                  </>\n                </div>\n              ))}\n            </div>\n          )\n      )}\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}