{"version":3,"sources":["webpack:///./src/configs/urls.ts","webpack:///./src/pages/presentation/1.tsx","webpack:///./src/components/layout/Presentation/index.tsx"],"names":["PAGE_URL","HOME","ARCHIVE","RESUME","PRESENTATION","PRESENTATION_1","PRESENTATION_2","PRESENTATION_3","PRESENTATION_4","PRESENTATION_5","PRESENTATION_6","PRESENTATION_7","PRESENTATION_8","PRESENTATION_9","PRESENTATION_10","PRESENTATION_DATA","title","date","tags","removeTrailingSlash","path","endsWith","slice","reactBasic","pLocation","location","linkedinUrl","data","site","siteMetadata","social","linkedin","undefined","pathname","className","href","target","style","width","margin","src","position","data-markdown","fontSize","id","PresentationLayout","description","children","useState","isLoaded","setIsLoaded","isInitLoadedReveal","repeatEvent","setInterval","useCallback","window","Reveal","initLoadedReveal","isReady","console","log","clearInterval","initialize","dependencies","async","callback","hljs","initHighlightingOnLoad","minScale","maxScale","useEffect","layout","link","REVEAL_LIB","script","display","rel"],"mappings":"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","file":"component---src-pages-presentation-1-tsx-e08260dfe8c642888896.js","sourcesContent":["export const PAGE_URL = {\n  HOME: '/',\n  ARCHIVE: '/archive',\n  RESUME: '/resume',\n  PRESENTATION: '/presentation',\n  PRESENTATION_1: '/presentation/1',\n  PRESENTATION_2: '/presentation/2',\n  PRESENTATION_3: '/presentation/3',\n  PRESENTATION_4: '/presentation/4',\n  PRESENTATION_5: '/presentation/5',\n  PRESENTATION_6: '/presentation/6',\n  PRESENTATION_7: '/presentation/7',\n  PRESENTATION_8: '/presentation/8',\n  PRESENTATION_9: '/presentation/9',\n  PRESENTATION_10: '/presentation/10'\n};\n\nexport interface IPresentationData {\n  title: string;\n  path?: string;\n  tags: string[];\n  date: string;\n}\nexport const PRESENTATION_DATA: { [key: string]: IPresentationData } = {\n  [PAGE_URL.PRESENTATION_1]: {\n    title: 'React.js basic - NHN벅스 팀 세미나 발표 자료',\n    date: 'Nov, 23, 2016',\n    tags: ['react', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_2]: {\n    title: 'Vue.js basic - NHN벅스 팀 세미나 발표 자료',\n    date: 'Apr, 08, 2017',\n    tags: ['vue', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_3]: {\n    title: '현실적인 개발로 먹고살기',\n    date: 'July, 15, 2017',\n    tags: ['developer', 'kookmin', 'university']\n  },\n  [PAGE_URL.PRESENTATION_4]: {\n    title: 'How to use RxJs - NHN벅스 팀 세미나 발표 자료',\n    date: 'Nov, 30, 2017',\n    tags: ['rxjs', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_5]: {\n    title: 'Vue pwa 시작하기 - Vuetiful korea 3rd 발표자료',\n    date: 'Nov, 30, 2017',\n    tags: ['vue', 'pwa', 'vuetifulkorea', '3rd']\n  },\n  [PAGE_URL.PRESENTATION_6]: {\n    title: 'Graphql 시작하기 (server) - NHN벅스 팀 세미나 발표 자료',\n    date: 'Mar, 05, 2018',\n    tags: ['graphql', 'server', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_7]: {\n    title: 'Graphql 시작하기 (client) - NHN벅스 팀 세미나 발표 자료',\n    date: 'Mar, 06, 2018',\n    tags: ['graphql', 'client', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_8]: {\n    title: 'Apollo로 알아보는 Vue in the GraphQL - Vuetiful korea 4th 발표자료',\n    date: 'Apr, 16, 2018',\n    tags: ['vue', 'graphql', 'apollo', 'vuetifulkorea', '4th']\n  },\n  [PAGE_URL.PRESENTATION_9]: {\n    title: 'Vuetiful korea 5회 세미나 내용 정리',\n    date: 'Aug, 15, 2018',\n    tags: ['vue', 'vuetifulkorea', '5th']\n  },\n  [PAGE_URL.PRESENTATION_10]: {\n    title: 'Sentry - Kakaopay FE 세미나',\n    date: 'Jul, 09, 2020',\n    tags: ['react', 'sentry', 'sourcemap']\n  }\n};\n\nexport const compareTrailingSlash = (prevUrl: string, nextUrl: string) =>\n  (prevUrl.endsWith('/') ? prevUrl.slice(0, -1) : prevUrl) === (nextUrl.endsWith('/') ? nextUrl.slice(0, -1) : nextUrl);\n\nexport const removeTrailingSlash = (path: string) => (path.endsWith('/') ? path.slice(0, -1) : path);\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\n\nimport PresentationLayout from '~/components/layout/Presentation';\nimport { PRESENTATION_DATA, removeTrailingSlash } from '~/configs/urls';\nimport { Query } from '~/gatsby-graphql-types';\n\nexport default function reactBasic({ location: pLocation, data }: PageProps) {\n  const linkedinUrl = (data as Query).site!.siteMetadata!.social!.linkedin || undefined;\n\n  return (\n    <PresentationLayout title={PRESENTATION_DATA[removeTrailingSlash(pLocation.pathname)].title || ''}>\n      <div className=\"slides\">\n        <section>\n          <h1>React.js</h1>\n          <h3>Javascript View Framework</h3>\n          <p>\n            <small>\n              Created by{' '}\n              <a href={linkedinUrl} target=\"_blank\">\n                Junseok, Choi\n              </a>\n            </small>\n          </p>\n        </section>\n\n        <section>\n          <p>시작은 페이스북 &amp; 인스타그램 개발자들의 View에만 집중된 프레임워크를 블라블라....(생략)</p>\n          <br />\n          <h2 className=\"fragment\">\n            <a href=\"https://facebook.github.io/react/2013/06/05/why-react.html\">\n              \"지속해서 데이터가 변화하는 대규모 애플리케이션을 구축하기\" 용도\n            </a>\n          </h2>\n          <aside className=\"notes\">물론 data, routing, action에 대한 기능들 사용 가능합니다.</aside>\n        </section>\n        <section>\n          <section>\n            <h2>React의 특징</h2>\n            <aside className=\"notes\">\n              맨날 사람들이 React, React하는데 왜 그런지 장점에 대해서 한번 살펴보겠습니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Components</h2>\n            <p style={{ width: '60%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/component.png\" />\n            </p>\n            <small>출처 - http://www.slideshare.net/taggon/react-js-46357445</small>\n            <aside className=\"notes\">\n              Component란, 재사용 가능한 UI 구성 단위입니다. React는 컴포넌트 구조로 이루어져 있으며 컴포넌트를 만들때\n              JSX문법이 사용됩니다. 상위에서 하위 컴포넌트로 연결되어 서로 결합됩니다. 컴포넌트 별로 데이터가\n              사용됩니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Components</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/component_example.png\" />\n            </p>\n            <aside className=\"notes\">\n              제가 예전에 공부했던 코드입니다. 데이터는 state와 prop를 이용하는데, props는 불변하는 객체, state 변하는\n              객체 입니다. 뒤에서 더 자세히 설명드리겠습니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Virtual DOM</h2>\n            <p>\n              <span>DOM?</span> No..., <span>Virtual DOM?</span> Yes!\n            </p>\n            <aside className=\"notes\">\n              SPA앱에서 사용자가 끊임없이 data를 가져오고, 현재 상태를 확인해서 data-binding을 해줘야 하는데 이 과정은\n              프로젝트가 커질수록 복잡해집니다.\n              <br />\n              React에서는 가상의 DOM을 사용합니다. Virtual DOM에서는 Reactive Rendering 기법을 이용해 DOM에 변경사항이\n              생기면 이를 감지하고 변경된 부분만 Re-Rendering을 합니다. 브라우저에 의존적이지 않고 / 빠르다는 장점이\n              있습니다.\n            </aside>\n          </section>\n          <section>\n            <h2>단반향 데이터 흐름</h2>\n            <p>상위 컴포넌트 (Parent) to 하위 컴포넌트 (Children)</p>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/tree.png\" />\n            </p>\n            <aside className=\"notes\">\n              앞서 보여드린 코드와 같이 CardList, CardItem, CardDetail 과 같이 상위 -&gt; 하위 로 진행되는 구조를\n              나타냅니다. 이러한 컴포넌트 구조를 따라가며 데이터 또한 단방향으로 진행되게 됩니다.\n            </aside>\n          </section>\n          <section>\n            <h2>JSX</h2>\n            <p>Javascript + XML</p>\n            <aside className=\"notes\">\n              XML의 문법을 차용하여 사용합니다. 자바스크립트 자체로도 만들 수 있고, 처음엔 불편하기도 하지만 조금만\n              사용해 보면 훨씬 간단하고 쉽게 Comopnent를 만들 수 있습니다. JSX문법으로 만든 후 JSXTransformer로 JS코드\n              컴파일링을 합니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Flux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/mvc.png\" />\n            </p>\n            <aside className=\"notes\">\n              flux 패턴의 사용은 필수는 아닙니다. 웹의 구조에서 양방향 데이터 바인딩 형식인 mvc 패턴의 사진입니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Flux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/flux.png\" />\n            </p>\n            <aside className=\"notes\">\n              flux 패턴은 MVC와는 다르게 단방향 데이터 통신에 맞게 나온 새로운 패턴입니다. Dispatcher, Stores, View 로\n              구성되어 있는데, action을 실행하고, 저장하고, 보여줄 수 있는 구조로 구성되어 있습니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Flux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/flux1.png\" />\n            </p>\n            <aside className=\"notes\">\n              state는 액션마다 재기록 되는데, 각각의 액션 전, 후로 state를 구분해줘야 합니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Flux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/flux2.png\" />\n            </p>\n            <aside className=\"notes\">그리고 middleware를 쉽게 붙일 수 있어야 하는데, 이 또한 쉽지 않습니다.</aside>\n          </section>\n          <section>\n            <h2>Redux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/redux1.png\" />\n            </p>\n            <aside className=\"notes\">\n              이를 해결하기 위해 Flux 기반의 Redux 라이브러리를 사용합니다. 액션 전, 후로 state를 구분하지 못하는 문제는\n              액션 마다 상태를 수정하지 않는 대신 상태를 복사하여 각각의 복사본을 수정해주는 방식을 택했습니다.\n            </aside>\n          </section>\n          <section>\n            <h2>Redux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/redux2.png\" />\n            </p>\n            <aside className=\"notes\">\n              그리고 연결하기 힘든 middleware는 액션에만 적용하여 데이터와는 관심사를 분리시켰습니다.\n            </aside>\n          </section>\n        </section>\n        <section>\n          <h2>기타 등등...</h2>\n          <p>기타 등등이라고 중요하지 않은 것은 아닙니다.</p>\n          <ul>\n            <li className=\"fragment\">es6</li>\n            <li className=\"fragment\">webpack</li>\n            <li className=\"fragment\">npm</li>\n            <li className=\"fragment\">...</li>\n          </ul>\n          <aside className=\"notes\">\n            React로 개발을 시작하면 무조건 만날 수 밖에 없는 요소들이지만 지금 세미나에선 생략하겠습니다.\n          </aside>\n        </section>\n        <section>\n          <h2>환경 설정</h2>\n          <p className=\"fragment fade-out\" style={{ position: 'absolute' }}>\n            이제 npm으로 babel와 react, 부가적인 라이브러리를 설치하고 babel로 JSX를 JS로 컴파일 하는 환경과\n            webpack.config.js로 개발환경 전용 서버를 돌아가게 하는 세팅을 하고...\n          </p>\n          <h3 className=\"fragment fade-in\">\n            이 모든 것을 간단하게!\n            <br />\n            <a href=\"https://github.com/facebookincubator/create-react-app\">create-react-app!</a>\n          </h3>\n\n          <aside className=\"notes\">\n            초반에는 설정이 꽤나 복잡했습니다. React의 컨트리뷰터인 Dan Abramov 이런 문제를 인지하고 있었는데, (제가\n            듣기론 Vue.js였던 것 같습니다.) 컨퍼런스의 Framework 내장 shell 환경을 보고 자동으로 세팅을 해주는 환경을\n            만들었다고 합니다. 이 환경을 install해주고, run만 해주면 바로 React 전용 서버가 켜지게 됩니다. dev환경에서\n            사용하는 서버이기 때문에, 개발이 끝난 후 build를 하면 개발 시 사용되었던 라이브러리들이 한꺼번에 build되어\n            나타납니다.\n          </aside>\n        </section>\n        <section data-markdown={true}>\n          <h2>환경 설정</h2>\n          <p style={{ width: '80%', margin: '0 auto' }}>\n            <img src=\"/img/presentation/react-basic/code1.png\" />\n          </p>\n          <h4>끝</h4>\n        </section>\n        <section>\n          <h2>개발</h2>\n          <p style={{ width: '60%', margin: '0 auto' }} className=\"fragment\">\n            <img src=\"/img/presentation/react-basic/develop.png\" />\n          </p>\n          <aside className=\"notes\">이제 실제 개발에 대해 알아보겠습니다.</aside>\n        </section>\n        <section>\n          <section data-markdown={true} style={{ fontSize: '28px' }}>\n            <h2 id=\"data-\">Data를 사용하기 위한 필요 요소</h2>\n            <h3 id=\"2-state\">1. props</h3>\n            <p style={{ width: '80%', margin: '0 auto' }} className=\"fragment\">\n              <img src=\"/img/presentation/react-basic/code2.png\" />\n            </p>\n            <aside className=\"notes\">\n              props는 부모 컴포넌트에서 자식 컴포넌트로 넣어준 데이터로, 상수처럼 변하지 않는 값 입니다. 위 예제처럼\n              호출하면서 넣어준 데이터를 하위 컴포넌트에서 사용할 수 있습니다.\n            </aside>\n          </section>\n          <section data-markdown={true} style={{ fontSize: '28px' }}>\n            <h2 id=\"data-\">Data를 사용하기 위한 필요 요소</h2>\n            <h3 id=\"2-state\">2. state</h3>\n            <p style={{ width: '80%', margin: '0 auto' }} className=\"fragment\">\n              <img src=\"/img/presentation/react-basic/code3.png\" />\n            </p>\n            <aside className=\"notes\">\n              state는 변수처럼 변할 수 있는 데이터를 들고있습니다. 여러 이벤트에 사용할 수 있습니다. 상위컴포넌트의\n              state를 자식에게 준다면 어떻게 될까요? 자식에서는 props로 사용하게 됩니다. 하지만 부모 요소의\n              this.state.a가 바뀐다고 하면 Re-Rendering이 되기 때문에 자식 또한 바뀌게 됩니다.\n            </aside>\n          </section>\n          <section style={{ fontSize: '28px' }}>\n            <h2>Data를 사용하기 위한 필요 요소</h2>\n            <h3>3. Life Cycle</h3>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/lifecycle.png\" />\n            </p>\n            <small>출처 - https://www.reddit.com/r/javascript/comments/45khex/reactjs_life_cycle_diagram_oc/</small>\n            <aside className=\"notes\">\n              생명주기 입니다. 만들어 질 때, 업데이트 될 때, 없어질 때 3가지 케이스로 나눠져 rendering이 되는데\n              rendering이 되는 과정에 거쳐가는 메서드 들입니다. 이 메서드 들을 이용해 컴포넌트가 생성이나 업데이트 전에\n              데이터를 가져오거나 초기화 하는 기능, 지워지기 직전에 어떠한 행동 등을 할 수 있습니다.\n            </aside>\n          </section>\n        </section>\n        <section>\n          <h2>Think about it</h2>\n          <h3 className=\"fragment\">어라?</h3>\n          <p className=\"fragment\">\n            그렇다면 state와 props는\n            <br />\n            각각의 컴포넌트가 모두 들고있는 건가?\n          </p>\n          <h2 className=\"fragment\">ㅇㅇ</h2>\n          <aside className=\"notes\">\n            네. 모든 컴포넌트는 각각의 state와 props를 가지고 있습니다. 그렇기에 data가 어디에서 어떻게 사용되는지\n            주의깊게 살피고 사용해야 합니다.\n          </aside>\n        </section>\n        <section>\n          <section>\n            <h2>이쯤에서 다시보는 Redux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }} className=\"fragment\">\n              <img src=\"/img/presentation/react-basic/withRedux.png\" />\n              <small>출처 - https://css-tricks.com/learning-react-redux/</small>\n            </p>\n            <aside className=\"notes\">\n              Flux 패턴은 꼭 있어야 하는 것은 아니지만 거의 필수처럼 자리잡고 있습니다. Redux가 없는 Flux에서는 왼쪽과\n              같이 각각의 데이터가 어지럽게 사용됩니다. 그러나 Redux는 Store를 공유하기때문에 어디서든 자유롭게 사용할\n              수 있습니다.\n            </aside>\n          </section>\n          <section data-markdown={true} style={{ fontSize: '28px' }}>\n            <h2>이쯤에서 다시보는 Redux</h2>\n            <p style={{ width: '80%', margin: '0 auto' }}>\n              <img src=\"/img/presentation/react-basic/code4.png\" />\n            </p>\n            <aside className=\"notes\">이런식으로 코드가 나오는데 자세한 것은 코드를 보면서 진행하겠습니다.</aside>\n          </section>\n        </section>\n        <section>\n          <h2>이제 코드를 보며 이해해 보겠습니다.</h2>\n          <a href=\"localhost:3000\">localhost:3000</a>\n        </section>\n      </div>\n    </PresentationLayout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        social {\n          linkedin\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\n\nimport SEO from '~/components/SEO';\n\ndeclare var Reveal: RevealStatic & {\n  isReady: () => boolean;\n};\ndeclare var window: Window & {\n  Reveal?: RevealStatic & {\n    isReady: () => boolean;\n  };\n};\n\ninterface IProps {\n  title: string;\n  pathname?: string;\n  description?: string;\n}\n\nconst PresentationLayout: React.FunctionComponent<React.PropsWithChildren<IProps>> = ({\n  title,\n  // pathname = '/',\n  description,\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n\n  let isInitLoadedReveal = false;\n  const repeatEvent = setInterval(\n    useCallback(() => {\n      if (typeof window !== 'undefined') {\n        if (window.Reveal && !isInitLoadedReveal) {\n          initLoadedReveal();\n          isInitLoadedReveal = true;\n        }\n\n        if (window.Reveal && !isLoaded) {\n          if (window.Reveal.isReady()) {\n            console.log('ready');\n            clearInterval(repeatEvent);\n            setIsLoaded(true);\n          } else {\n            initLoadedReveal();\n          }\n        }\n      }\n    }, [isLoaded]),\n    300\n  );\n\n  const initLoadedReveal = () => {\n    Reveal.initialize({\n      dependencies: [\n        { src: '/js/presentation/notes.min.js', async: true },\n        {\n          src: '/js/presentation/highlight.min.js',\n          async: true,\n          callback: () => {\n            //@ts-ignore\n            hljs.initHighlightingOnLoad();\n          }\n        }\n      ],\n      minScale: 0.66,\n      maxScale: 0.66\n    });\n  };\n\n  useEffect(() => {\n    if (isLoaded) {\n      console.log('layout');\n      window.Reveal?.layout(); // display가 block이 된 다음 layout을 다시 해야함\n    }\n  }, [isLoaded]);\n\n  return (\n    <>\n      <SEO title={title} description={description} link={REVEAL_LIB.link} script={REVEAL_LIB.script} />\n      <div className=\"reveal\" style={{ position: 'absolute', display: isLoaded ? 'block' : 'none' }}>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default PresentationLayout;\n\n/**\n * @description 스크립트를 히스토리 이동 시, 여러번 호출하는게 낭비같아서 window.Reveal이 있을 시 로드를 안하게 했더니 initialize나 layout을 다시 해도 화면이 안나옴\n */\nconst REVEAL_LIB = {\n  link: [\n    { rel: 'stylesheet', href: '/css/presentation/reveal.min.css' },\n    { rel: 'stylesheet', href: '/css/presentation/black.min.css' },\n    { rel: 'stylesheet', href: '/css/presentation/zenburn.min.css' }\n  ],\n  script: [\n    {\n      src: '/js/presentation/reveal.min.js'\n    },\n    {\n      src: '/js/presentation/head.min.js'\n    }\n  ]\n};\n"],"sourceRoot":""}