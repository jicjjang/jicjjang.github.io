{"version":3,"sources":["webpack:///./src/configs/urls.ts","webpack:///./src/pages/presentation/6.tsx","webpack:///./src/components/layout/Presentation/index.tsx"],"names":["PAGE_URL","HOME","ARCHIVE","RESUME","PRESENTATION","PRESENTATION_1","PRESENTATION_2","PRESENTATION_3","PRESENTATION_4","PRESENTATION_5","PRESENTATION_6","PRESENTATION_7","PRESENTATION_8","PRESENTATION_9","PRESENTATION_10","PRESENTATION_DATA","title","date","tags","removeTrailingSlash","path","endsWith","slice","graphqlStartServer","pLocation","location","linkedinUrl","data","site","siteMetadata","social","linkedin","undefined","pathname","className","href","target","style","listStyle","margin","width","display","verticalAlign","data-fragment-index","src","fontSize","marginTop","PresentationLayout","description","children","useState","isLoaded","setIsLoaded","isInitLoadedReveal","repeatEvent","setInterval","useCallback","window","Reveal","initLoadedReveal","isReady","console","log","clearInterval","initialize","dependencies","async","callback","hljs","initHighlightingOnLoad","minScale","maxScale","useEffect","layout","link","REVEAL_LIB","script","position","rel"],"mappings":"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","file":"component---src-pages-presentation-6-tsx-e5492b38dd723c66aa51.js","sourcesContent":["export const PAGE_URL = {\n  HOME: '/',\n  ARCHIVE: '/archive',\n  RESUME: '/resume',\n  PRESENTATION: '/presentation',\n  PRESENTATION_1: '/presentation/1',\n  PRESENTATION_2: '/presentation/2',\n  PRESENTATION_3: '/presentation/3',\n  PRESENTATION_4: '/presentation/4',\n  PRESENTATION_5: '/presentation/5',\n  PRESENTATION_6: '/presentation/6',\n  PRESENTATION_7: '/presentation/7',\n  PRESENTATION_8: '/presentation/8',\n  PRESENTATION_9: '/presentation/9',\n  PRESENTATION_10: '/presentation/10'\n};\n\nexport interface IPresentationData {\n  title: string;\n  path?: string;\n  tags: string[];\n  date: string;\n}\nexport const PRESENTATION_DATA: { [key: string]: IPresentationData } = {\n  [PAGE_URL.PRESENTATION_1]: {\n    title: 'React.js basic - NHN벅스 팀 세미나 발표 자료',\n    date: 'Nov, 23, 2016',\n    tags: ['react', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_2]: {\n    title: 'Vue.js basic - NHN벅스 팀 세미나 발표 자료',\n    date: 'Apr, 08, 2017',\n    tags: ['vue', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_3]: {\n    title: '현실적인 개발로 먹고살기',\n    date: 'July, 15, 2017',\n    tags: ['developer', 'kookmin', 'university']\n  },\n  [PAGE_URL.PRESENTATION_4]: {\n    title: 'How to use RxJs - NHN벅스 팀 세미나 발표 자료',\n    date: 'Nov, 30, 2017',\n    tags: ['rxjs', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_5]: {\n    title: 'Vue pwa 시작하기 - Vuetiful korea 3rd 발표자료',\n    date: 'Nov, 30, 2017',\n    tags: ['vue', 'pwa', 'vuetifulkorea', '3rd']\n  },\n  [PAGE_URL.PRESENTATION_6]: {\n    title: 'Graphql 시작하기 (server) - NHN벅스 팀 세미나 발표 자료',\n    date: 'Mar, 05, 2018',\n    tags: ['graphql', 'server', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_7]: {\n    title: 'Graphql 시작하기 (client) - NHN벅스 팀 세미나 발표 자료',\n    date: 'Mar, 06, 2018',\n    tags: ['graphql', 'client', 'nhn', 'bugs']\n  },\n  [PAGE_URL.PRESENTATION_8]: {\n    title: 'Apollo로 알아보는 Vue in the GraphQL - Vuetiful korea 4th 발표자료',\n    date: 'Apr, 16, 2018',\n    tags: ['vue', 'graphql', 'apollo', 'vuetifulkorea', '4th']\n  },\n  [PAGE_URL.PRESENTATION_9]: {\n    title: 'Vuetiful korea 5회 세미나 내용 정리',\n    date: 'Aug, 15, 2018',\n    tags: ['vue', 'vuetifulkorea', '5th']\n  },\n  [PAGE_URL.PRESENTATION_10]: {\n    title: 'Sentry - Kakaopay FE 세미나',\n    date: 'Jul, 09, 2020',\n    tags: ['react', 'sentry', 'sourcemap']\n  }\n};\n\nexport const compareTrailingSlash = (prevUrl: string, nextUrl: string) =>\n  (prevUrl.endsWith('/') ? prevUrl.slice(0, -1) : prevUrl) === (nextUrl.endsWith('/') ? nextUrl.slice(0, -1) : nextUrl);\n\nexport const removeTrailingSlash = (path: string) => (path.endsWith('/') ? path.slice(0, -1) : path);\n","import * as React from 'react';\nimport { PageProps, graphql } from 'gatsby';\n\nimport PresentationLayout from '~/components/layout/Presentation';\nimport { Query } from '~/gatsby-graphql-types';\n\nexport default function graphqlStartServer({ location: pLocation, data }: PageProps) {\n  const linkedinUrl = (data as Query).site!.siteMetadata!.social!.linkedin || undefined;\n\n  return (\n    <PresentationLayout pathname={pLocation.pathname}>\n      <div className=\"slides\">\n        <section>\n          <h2>GraphQL 시작하기 1</h2>\n          <h3>NHN Bugs</h3>\n          <p>\n            <small>\n              Created by{' '}\n              <a href={linkedinUrl} target=\"_blank\">\n                Junseok, Choi\n              </a>\n            </small>\n          </p>\n          <aside className=\"notes\">\n            주제를 시작하기 1로 정한것은, 서버와 클라이언트 모두 적용해야 하기 때문인데, 금일 발표는 서버를 위주로\n            발표를 진행하고, 추후 발표에서 Vue에 적용한 클라이언트 위주의 발표를 진행하겠습니다.\n          </aside>\n        </section>\n\n        <section>\n          <div>\n            <h2>순서</h2>\n            <ul style={{ listStyle: 'none', margin: '0' }}>\n              <li className=\"fragment\">1. About GraphQL</li>\n              <li className=\"fragment\">2. Example GraphQL</li>\n              <li className=\"fragment\">3. Stable GraphQL</li>\n              <li className=\"fragment\">Q &amp; A</li>\n            </ul>\n          </div>\n        </section>\n\n        <section>\n          <section>\n            <h2>1. About GraphQL</h2>\n            <div style={{ width: '90%', margin: '0 auto' }}>\n              <span style={{ display: 'inline-block', width: '58%', margin: '5px', verticalAlign: 'top' }}>\n                <img className=\"fragment\" data-fragment-index=\"1\" src=\"/img/presentation/graphql-start/about1.jpg\" />\n                <div className=\"fragment\" style={{ fontSize: '20px' }} data-fragment-index=\"3\">\n                  필요한 것만 정확히 물어볼 수있는 기능을 제공하며 시간이 지남에 따라 API를 쉽게 개발할 수 있도록...\n                </div>\n              </span>\n              <span style={{ display: 'inline-block', width: '38%', margin: '5px' }}>\n                <img className=\"fragment\" data-fragment-index=\"2\" src=\"/img/presentation/graphql-start/about2.jpg\" />\n                <div className=\"fragment\" style={{ fontSize: '20px' }} data-fragment-index=\"4\">\n                  GraphQL은 단독 버전 관리를 통해 기존 코드 수정없이 보다 깨끗하고 유지보수가 쉽게 사용이 가능...\n                </div>\n              </span>\n            </div>\n            <aside className=\"notes\">\n              4/4\n              <br />\n              이러한 장점이 있는데요, 저희 서비스에 적용한다면 어떤 도움이 될지, 어떤 점을 미리 살펴봐야 할 지\n              알아보겠습니다.\n            </aside>\n          </section>\n          <section>\n            <h2>들어가기에 앞서...</h2>\n            <div style={{ display: 'inline-block', width: '45%', verticalAlign: 'top' }}>\n              <img className=\"fragment\" data-fragment-index=\"1\" src=\"/img/presentation/graphql-start/apollo1.png\" />\n              <div className=\"fragment\" data-fragment-index=\"3\">\n                <a\n                  href=\"https://graphql-kr.github.io/code/#apollo-server-https-www-apollographql-com-docs-apollo-server-github-https-github-com-apollographql-apollo-server-npm-https-www-npmjs-com-package-apollo-server-express\"\n                  target=\"_blank\">\n                  Apollo를 사용합니다.\n                </a>\n              </div>\n            </div>\n            <div style={{ display: 'inline-block', width: '50%' }}>\n              <img className=\"fragment\" data-fragment-index=\"2\" src=\"/img/presentation/graphql-start/apollo2.png\" />\n            </div>\n            <aside className=\"notes\">\n              3/3\n              <br />\n              그 전에, GraphQL은 Apollo와 함께 사용하겠습니다. 기본적으로 `GraphQL은 API를 위한 쿼리언어` 이므로 서버만\n              지원을 합니다. 서버에 GraphQL을 적용하고, 클라이언트에서는 데이터만 호출할 수도 있지만 프론트와 서버 사이\n              GraphQL 데이터를 편리하게 교환할 수 있도록 Apollo가 도와줍니다.\n              <br />\n              <br />\n              Apollo는 JavaScript 서버 프레임워크들에 대해서 클라이언트와의 더욱 쉬운 연결을 위해 별도의 지원 또한\n              하고있습니다.\n              <br />\n              <br />\n              또한, GraphQL에서도 공식적으로 Apollo를 사용하라고 가이드를 제공해줍니다. (물론 서버까지 커버해줍니다.)\n            </aside>\n          </section>\n          <section>\n            <h3>\n              <a\n                href=\"https://github.com/seouldrinker/seoulDrinkerGraphql/blob/master/api/graphql/typeDefs.js\"\n                target=\"_blank\">\n                Type 정의\n              </a>\n            </h3>\n            <div>\n              <img\n                className=\"fragment\"\n                style={{ display: 'inline-block', width: '15%', margin: '0 10px' }}\n                src=\"/img/presentation/graphql-start-server/type1.jpg\"\n              />\n              <img\n                className=\"fragment\"\n                style={{ display: 'inline-block', width: '15%', margin: '0 10px', verticalAlign: 'top' }}\n                src=\"/img/presentation/graphql-start-server/type2.jpg\"\n              />\n              <span\n                className=\"fragment\"\n                style={{ display: 'inline-block', width: '65%', marginTop: '20%', verticalAlign: 'top' }}>\n                MVC 모델에서의 Model과 동일\n              </span>\n            </div>\n            <aside className=\"notes\">\n              2/3\n              <br />\n              MVC 모델에서의 Model과 동일하게 DB의 필드가 아닌,\n              <br />\n              3/3\n              <br />\n              가져올 데이터에 대해 사전에 정의를 해놓습니다.\n            </aside>\n          </section>\n          <section>\n            <h3>\n              <a\n                href=\"https://github.com/seouldrinker/seoulDrinkerGraphql/blob/master/api/graphql/typeDefs.js\"\n                target=\"_blank\">\n                Query &amp; Mutation 정의\n              </a>\n            </h3>\n            <div>\n              <img\n                className=\"fragment\"\n                style={{ display: 'inline-block', width: '25%', margin: '0 10px' }}\n                src=\"/img/presentation/graphql-start-server/query_mutation.jpg\"\n              />\n              <span\n                className=\"fragment\"\n                style={{ display: 'inline-block', width: '65%', marginTop: '20%', verticalAlign: 'top' }}>\n                데이터를 가져올 수 있는 조합인 Query 및 Mutation을 정의합니다.\n              </span>\n            </div>\n            <aside className=\"notes\">\n              1/2\n              <br />\n              저희가 기존에 만들던 Query와 동일합니다. Mutation은 Get이 아닌 Post, Put, Delete, Options 요청들이며,\n              <br />\n              2/2\n              <br />\n              정의에 있어서 Get과 큰 차이는 없습니다.\n            </aside>\n          </section>\n          <section>\n            <h3>Interface 정의</h3>\n            <div>\n              <div className=\"fragment\" style={{ width: '48%', margin: '0 auto' }}>\n                <img src=\"/img/presentation/graphql-start-server/code1.png\" />\n              </div>\n              <div className=\"fragment\">interface를 상속하여 타입 구현</div>\n            </div>\n            <aside className=\"notes\">\n              1/2\n              <br />\n              React, Vue에 Flow나 Typescript로 타입에 강제성을 부여는 것과 마찬가지로\n              <br />\n              2/2\n              <br />\n              GraphQL에 Interface를 정의 후, type에서 implements 한 값을 정의합니다.\n            </aside>\n          </section>\n          <section>\n            <h3>Resolver</h3>\n            <div className=\"fragment\" style={{ display: 'inline-block', width: '55%', verticalAlign: 'top' }}>\n              <img src=\"/img/presentation/graphql-start-server/resolvers1.png\" />\n            </div>\n            <div className=\"fragment\" style={{ display: 'inline-block', width: '40%', margin: '0 10px' }}>\n              <img src=\"/img/presentation/graphql-start-server/resolvers2.png\" />\n            </div>\n            <div className=\"fragment\">정의한 Query와 Mutation에 대한 내용을 구현합니다.</div>\n            <aside className=\"notes\">\n              2/3\n              <br />\n              type으로 정의한 모델에 맞게 기능들을 구현합니다.\n              <br />\n              3/3\n              <br />\n              모델들이 구현되어있는 이유는, 해당 모델에서 조인하여 가져오는 값들을 어떻게 가져올지에 대해 정의한\n              것입니다. `pubDetail` Query를 실행한다고 하였을 때, return 값은 Pub 모델과 같은데 Pub 에는 Feed의 배열인\n              `_feedList` 값이 있습니다. 이 값을 구현해줍니다. 또한, Feed에서 연결된, 연결된, 연결된.... 값들을 모두\n              정의해주면 필요할 경우, 원하는 쿼리에 대한 결과를 가져올 수 있습니다.\n            </aside>\n          </section>\n        </section>\n\n        <section>\n          <h3>2. Example GraphQL</h3>\n          <div className=\"fragment\" style={{ display: 'inline-block', width: '50%', verticalAlign: 'top' }}>\n            <div style={{ fontSize: '20px' }}>\n              <a href=\"https://github.com/seouldrinker/seoulDrinkerGraphql\" target=\"_blank\">\n                &lt; 예제를 보면서 확인해봅시다! &gt;\n              </a>\n            </div>\n          </div>\n        </section>\n\n        <section>\n          <section>\n            <h3>3. Stable GraphQL</h3>\n            <div className=\"fragment\" style={{ display: 'inline-block', width: '50%', verticalAlign: 'top' }}>\n              <img src=\"/img/presentation/graphql-start-server/stable1.png\" />\n              <div style={{ fontSize: '20px' }}>\n                <a href=\"https://www.apollographql.com/docs/#client-section\" target=\"_blank\">\n                  &lt; Apollo 클라이언트 &gt;\n                </a>\n              </div>\n            </div>\n            <div className=\"fragment\" style={{ display: 'inline-block', width: '40%' }}>\n              <img src=\"/img/presentation/graphql-start-server/stable2.png\" />\n              <div style={{ fontSize: '20px' }}>\n                <a href=\"http://graphql.org/code/#server-libraries\" target=\"_blank\">\n                  &lt; GraphQL 서버 &gt;\n                </a>\n              </div>\n            </div>\n            <div className=\"fragment\">서버와 클라이언트 각종 언어 및 라이브러리에 대응</div>\n            <aside className=\"notes\">\n              3/3\n              <br />\n              GraphQL가 만들어진 12년도 이후로 서버는 각종 언어에 대한 지원을 시작했습니다. Apollo는 16년 2월 경\n              시작하였지만 현재 스타 6,500여개에 contributor가 700명 이상입니다.\n            </aside>\n          </section>\n          <section>\n            <h3>사용하면서 발견한 이슈?!</h3>\n            <div className=\"fragment\">는 아직까지 없습니다.</div>\n            <aside className=\"notes\">\n              1/1\n              <br />\n              아직까지 만들어보면서 발견한 이슈는 없고, Get, Post 등 동작은 확인했지만 파일이나 이미지 업로드에 대한\n              구현을 해보지 못했습니다.\n            </aside>\n          </section>\n          <section>\n            <h3>벅스에 도움이 될만한 부분</h3>\n            <div className=\"fragment\">클라이언트 &amp; 웹, 지금의 API로 한번에!!</div>\n            <aside className=\"notes\">\n              1/1\n              <br />\n              클라이언트와 웹 모두 API를 사용한다고 하면, 서로 다른 API를 가져오는 이슈가 있는데 이를 GrapghQL로 해결이\n              가능합니다.\n            </aside>\n          </section>\n          <section>\n            <h3>사용 중인 기업</h3>\n            <div className=\"fragment\" style={{ display: 'inline-block', width: '50%', verticalAlign: 'top' }}>\n              <img src=\"/img/presentation/graphql-start/users.png\" />\n              <div style={{ fontSize: '20px' }}>\n                <a href=\"http://graphql.org/users/\" target=\"_blank\">\n                  &lt; 더 많은 기업들 &gt;\n                </a>\n              </div>\n            </div>\n            <aside className=\"notes\">\n              1/1\n              <br />\n              많은 기업에서 사용중이지만, 대표적으로 이미지와 같이 페이스북, 깃헙, 핀터레스트, 코세라 등등의 기업들에서\n              사용 중입니다.\n            </aside>\n          </section>\n          <section>\n            <h3>컨퍼런스</h3>\n            <div className=\"fragment\" style={{ display: 'inline-block', width: '50%', verticalAlign: 'top' }}>\n              <img src=\"/img/presentation/graphql-start/conference.png\" />\n              <div style={{ fontSize: '25px' }}>\n                <a href=\"https://summit.graphql.com/\" target=\"_blank\">\n                  &lt; 발표자 - 페이스북, 깃헙, 트위치, oauth, IBM 등등 기업 직원들... &gt;\n                </a>\n              </div>\n            </div>\n            <aside className=\"notes\">\n              1/1\n              <br />\n              2016, 2017년도에 Apollo의 주도로 컨퍼런스가 이루어졌으며 매년 개최될 예정입니다.\n            </aside>\n          </section>\n        </section>\n\n        <section>\n          <section>\n            <h1>Q &amp; A</h1>\n          </section>\n          <section>\n            <h1>끝</h1>\n            <div>감사합니다.</div>\n          </section>\n        </section>\n      </div>\n    </PresentationLayout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        social {\n          linkedin\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\n\nimport SEO from '~/components/SEO';\nimport { PRESENTATION_DATA, removeTrailingSlash } from '~/configs/urls';\n\ndeclare var Reveal: RevealStatic & {\n  isReady: () => boolean;\n};\ndeclare var window: Window & {\n  Reveal?: RevealStatic & {\n    isReady: () => boolean;\n  };\n};\n\ninterface IProps {\n  pathname: string;\n  description?: string;\n}\n\nconst PresentationLayout: React.FunctionComponent<React.PropsWithChildren<IProps>> = ({\n  pathname,\n  description,\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n  const title = PRESENTATION_DATA[removeTrailingSlash(pathname)].title || '';\n\n  let isInitLoadedReveal = false;\n  const repeatEvent = setInterval(\n    useCallback(() => {\n      if (typeof window !== 'undefined') {\n        if (window.Reveal && !isInitLoadedReveal) {\n          initLoadedReveal();\n          isInitLoadedReveal = true;\n        }\n\n        if (window.Reveal && !isLoaded) {\n          if (window.Reveal.isReady()) {\n            console.log('ready');\n            clearInterval(repeatEvent);\n            setIsLoaded(true);\n          } else {\n            initLoadedReveal();\n          }\n        }\n      }\n    }, [isLoaded]),\n    300\n  );\n\n  const initLoadedReveal = () => {\n    Reveal.initialize({\n      dependencies: [\n        { src: '/js/presentation/notes.min.js', async: true },\n        {\n          src: '/js/presentation/highlight.min.js',\n          async: true,\n          callback: () => {\n            //@ts-ignore\n            hljs.initHighlightingOnLoad();\n          }\n        }\n      ],\n      minScale: 0.66,\n      maxScale: 0.66\n    });\n  };\n\n  useEffect(() => {\n    if (isLoaded) {\n      console.log('layout');\n      window.Reveal?.layout(); // display가 block이 된 다음 layout을 다시 해야함\n    }\n  }, [isLoaded]);\n\n  return (\n    <>\n      <SEO title={title} description={description} link={REVEAL_LIB.link} script={REVEAL_LIB.script} />\n      <div className=\"reveal\" style={{ position: 'absolute', display: isLoaded ? 'block' : 'none' }}>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default PresentationLayout;\n\n/**\n * @description 스크립트를 히스토리 이동 시, 여러번 호출하는게 낭비같아서 window.Reveal이 있을 시 로드를 안하게 했더니 initialize나 layout을 다시 해도 화면이 안나옴\n */\nconst REVEAL_LIB = {\n  link: [\n    { rel: 'stylesheet', href: '/css/presentation/reveal.min.css' },\n    { rel: 'stylesheet', href: '/css/presentation/black.min.css' },\n    { rel: 'stylesheet', href: '/css/presentation/zenburn.min.css' }\n  ],\n  script: [\n    {\n      src: '/js/presentation/reveal.min.js'\n    },\n    {\n      src: '/js/presentation/head.min.js'\n    }\n  ]\n};\n"],"sourceRoot":""}