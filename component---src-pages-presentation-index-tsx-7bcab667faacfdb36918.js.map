{"version":3,"sources":["webpack:///./src/pages/presentation/index.tsx","webpack:///./src/components/PostHeader.tsx"],"names":["Presentation","data","pLocation","location","presentations","allSitePage","edges","forEach","presentationData","path","removeTrailingSlash","node","push","PRESENTATION_DATA","title","pathname","length","map","index","tags","date","key","rhythm","query","StyledHeader","styled","header","props","StyledH1Link","Link","StyledTime","time","scale","fontSize","lineHeight","PostHeader","to","className","dateTime"],"mappings":"kRAae,SAASA,EAAT,GAAgE,IAAxCC,EAAwC,EAAxCA,KAAgBC,EAAwB,EAAlCC,SACrCC,EAAqC,GAS3C,OARCH,EAAeI,YAAYC,MAAMC,SAAQ,SAAAC,GACxC,IAAMC,EAAOC,YAAoBF,EAAiBG,KAAKF,MACvDL,EAAcQ,KAAd,iBACKC,IAAkBJ,GADvB,CAEEA,aAKF,gBAAC,IAAD,CAAeK,MAbL,eAamBC,SAAUb,EAAUa,UAC9CX,EAAcY,OAAS,EACtBZ,EAAca,KAAI,WAAiDC,GAAjD,IAAGJ,EAAH,EAAGA,MAAOK,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMX,EAAtB,EAAsBA,KAAtB,OAChB,gBAAC,IAAD,CAAqBY,IAAQP,EAAL,IAAcI,EAASI,OAAQA,YAAO,IAC5D,gBAAC,IAAD,CAAYR,MAAOA,EAAQL,KAAMA,EAAMW,KAAMA,KAC5CD,aAAA,EAAAA,EAAMH,QAAS,gBAAC,IAAD,CAAUG,KAAMA,IAAW,SAI/C,gBAAC,IAAD,CAAsBG,OAAQA,YAAO,IAArC,eAMD,IAAMC,EAAQ,c,oCCvCrB,gEAQMC,EAAeC,IAAOC,OAAV,8EAAGD,CAAH,wBACC,SAAAE,GAAK,OAAIA,EAAML,UAG5BM,EAAeH,YAAOI,KAAV,8EAAGJ,CAAH,wCAOZK,EAAaL,IAAOM,KAAV,4EAAGN,CAAH,kDAED,SAAAE,GAAK,OAAIA,EAAMK,MAAMC,YACnB,SAAAN,GAAK,OAAIA,EAAMK,MAAME,cAwBvBC,IAfuB,SAAC,GAA0B,IAAxBrB,EAAwB,EAAxBA,MAAOL,EAAiB,EAAjBA,KAAMW,EAAW,EAAXA,KACpD,OACE,gBAACI,EAAD,CAAcF,OAAQA,YAAO,MAC3B,gBAAC,IAAD,CAAqBU,MAAOA,YAAM,IAAMV,OAAQA,YAAO,KACpDb,EAAO,gBAACmB,EAAD,CAAcQ,GAAI3B,GAAQK,GAAwBA,GAE5D,qBAAGuB,UAAU,aACX,gBAACP,EAAD,CAAYQ,SAAUlB,EAAMY,MAAOA,aAAO,KACvCZ","file":"component---src-pages-presentation-index-tsx-7bcab667faacfdb36918.js","sourcesContent":["import * as React from 'react';\nimport { PageProps, graphql } from 'gatsby';\n\nimport { Query } from '~/gatsby-graphql-types';\nimport DefaultLayout from '~/components/layout/Default';\nimport { removeTrailingSlash, PRESENTATION_DATA, IPresentationData } from '~/configs/urls';\nimport { StyledCommonArticle, StyledCommonDivEmpty } from '~/components/common';\nimport PostTags from '~/components/PostTags';\nimport PostHeader from '~/components/PostHeader';\nimport { rhythm } from '~/configs/typography';\n\nconst TITLE = 'Presentation';\n\nexport default function Presentation({ data, location: pLocation }: PageProps) {\n  const presentations: IPresentationData[] = [];\n  (data as Query).allSitePage.edges.forEach(presentationData => {\n    const path = removeTrailingSlash(presentationData.node.path);\n    presentations.push({\n      ...PRESENTATION_DATA[path],\n      path\n    });\n  });\n\n  return (\n    <DefaultLayout title={TITLE} pathname={pLocation.pathname}>\n      {presentations.length > 0 ? (\n        presentations.map(({ title, tags, date, path }: IPresentationData, index: number) => (\n          <StyledCommonArticle key={`${title}-${index}`} rhythm={rhythm(2)}>\n            <PostHeader title={title!} path={path} date={date} />\n            {tags?.length ? <PostTags tags={tags} /> : null}\n          </StyledCommonArticle>\n        ))\n      ) : (\n        <StyledCommonDivEmpty rhythm={rhythm(4)}>컨텐츠가 없습니다.</StyledCommonDivEmpty>\n      )}\n    </DefaultLayout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allSitePage(filter: { path: { regex: \"/^/presentation/[\\\\w]/i\"}}) {\n      edges {\n        node {\n          id\n          path\n          matchPath\n        }\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { BaseLine } from 'typography';\nimport { Link } from 'gatsby';\n\nimport { scale, rhythm } from '~/configs/typography';\nimport { StyledCommonH1Title } from '~/components/common';\n\nconst StyledHeader = styled.header<{ rhythm: string }>`\n  margin-bottom: ${props => props.rhythm};\n`;\n\nconst StyledH1Link = styled(Link)`\n  color: #000;\n  &:hover {\n    color: #172fde;\n  }\n`;\n\nconst StyledTime = styled.time<{ scale: BaseLine }>`\n  color: #898989;\n  font-size: ${props => props.scale.fontSize};\n  line-height: ${props => props.scale.lineHeight};\n`;\n\ninterface IProps {\n  title: string;\n  path?: string;\n  date: string;\n}\n\nconst PostHeader: React.SFC<IProps> = ({ title, path, date }) => {\n  return (\n    <StyledHeader rhythm={rhythm(1.2)}>\n      <StyledCommonH1Title scale={scale(0.5)} rhythm={rhythm(0.2)}>\n        {path ? <StyledH1Link to={path!}>{title}</StyledH1Link> : title}\n      </StyledCommonH1Title>\n      <p className=\"post-meta\">\n        <StyledTime dateTime={date} scale={scale(-0.1)}>\n          {date}\n        </StyledTime>\n      </p>\n    </StyledHeader>\n  );\n};\n\nexport default PostHeader;\n"],"sourceRoot":""}