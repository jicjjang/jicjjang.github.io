(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{COYA:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return r}));var l={HOME:"/",ARCHIVE:"/archive",RESUME:"/resume",PRESENTATION:"/presentation",PRESENTATION_1:"/presentation/1",PRESENTATION_2:"/presentation/2",PRESENTATION_3:"/presentation/3",PRESENTATION_4:"/presentation/4",PRESENTATION_5:"/presentation/5",PRESENTATION_6:"/presentation/6",PRESENTATION_7:"/presentation/7",PRESENTATION_8:"/presentation/8",PRESENTATION_9:"/presentation/9",PRESENTATION_TYPESCRIPT__OT:"/presentation/typescript/ot",PRESENTATION_TYPESCRIPT__WHY_USE_TYPESCRIPT:"/presentation/typescript/about/why-use-typescript",PRESENTATION_TYPESCRIPT__WORRIES_OF_USERS_WHO_DO_NOT_USE_TYPESCRIPT:"/presentation/typescript/about/worries-of-users-who-do-not-use-typescript",PRESENTATION_TYPESCRIPT__HOW_WHEN_USE_TYPESCRIPT:"/presentation/typescript/about/how-when-use-typescript"},a=[{path:l.PRESENTATION_1,title:"React.js basic - NHN벅스 팀 세미나 발표 자료",date:"Nov, 23, 2016",tags:["react","nhn","bugs"]},{path:l.PRESENTATION_2,title:"Vue.js basic - NHN벅스 팀 세미나 발표 자료",date:"Apr, 08, 2017",tags:["vue","nhn","bugs"]},{path:l.PRESENTATION_3,title:"현실적인 개발로 먹고살기",date:"July, 15, 2017",tags:["developer","kookmin","university"]},{path:l.PRESENTATION_4,title:"How to use RxJs - NHN벅스 팀 세미나 발표 자료",date:"Nov, 30, 2017",tags:["rxjs","nhn","bugs"]},{path:l.PRESENTATION_5,title:"Vue pwa 시작하기 - Vuetiful korea 3rd 발표자료",date:"Nov, 30, 2017",tags:["vue","pwa","vuetifulkorea","3rd"]},{path:l.PRESENTATION_6,title:"Graphql 시작하기 (server) - NHN벅스 팀 세미나 발표 자료",date:"Mar, 05, 2018",tags:["graphql","server","nhn","bugs"]},{path:l.PRESENTATION_7,title:"Graphql 시작하기 (client) - NHN벅스 팀 세미나 발표 자료",date:"Mar, 06, 2018",tags:["graphql","client","nhn","bugs"]},{path:l.PRESENTATION_8,title:"Apollo로 알아보는 Vue in the GraphQL - Vuetiful korea 4th 발표자료",date:"Apr, 16, 2018",tags:["vue","graphql","apollo","vuetifulkorea","4th"]},{path:l.PRESENTATION_9,title:"Vuetiful korea 5회 세미나 내용 정리",date:"Aug, 15, 2018",tags:["vue","vuetifulkorea","5th"]},{path:l.PRESENTATION_TYPESCRIPT__OT,title:"기초부터 시작하는 typescript 강의 - ot",date:"Feb, 01, 2023",tags:["typescript","inflearn","ot"]},{path:l.PRESENTATION_TYPESCRIPT__WHY_USE_TYPESCRIPT,title:"기초부터 시작하는 typescript 강의 - 타입스크립트란? - 타입스크립트를 꼭 배워야 하나요?",date:"Feb, 02, 2023",tags:["typescript","inflearn","about","why use typescript"]},{path:l.PRESENTATION_TYPESCRIPT__WORRIES_OF_USERS_WHO_DO_NOT_USE_TYPESCRIPT,title:"기초부터 시작하는 typescript 강의 - 타입스크립트란? - 타입스크립트를 사용하지 않는 유저들의 걱정",date:"Feb, 03, 2023",tags:["typescript","inflearn","about","worries of users who do not use typescript"]},{path:l.PRESENTATION_TYPESCRIPT__HOW_WHEN_USE_TYPESCRIPT,title:"기초부터 시작하는 typescript 강의 - 타입스크립트란? - 언제, 어떻게 사용할 수 있나요?",date:"Feb, 04, 2023",tags:["typescript","inflearn","about","how, when use typescript"]}],r=function(e){return e.endsWith("/")?e.slice(0,-1):e}},"Nlq+":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return r}));var l=n("q1tI"),a=n("xbwu");function r(e){var t=e.location;return l.createElement(a.a,{pathname:t.pathname},l.createElement("div",{className:"slides"},l.createElement("section",null,l.createElement("div",null,l.createElement("img",{src:"/img/presentation/typescript/logo.png",alt:"logo",style:{width:"50%",margin:"0 auto",background:"none",border:"none"}}),l.createElement("p",{style:{margin:"20px 0 0 0"}},"기초부터 시작하는 타입스크립트 강의"),l.createElement("p",{style:{margin:"20px 0 0 0"}},"타입스크립트란? - 타입스크립트를 꼭 배워야 하나요?")),l.createElement("aside",{className:"notes"})),l.createElement("section",null,l.createElement("div",null,l.createElement("h2",null,"타입스크립트란?"),l.createElement("div",{style:{display:"flex",alignItems:"center"}},l.createElement("img",{src:"/img/presentation/typescript/about/why-use-typescript/what-is-typescript.jpg"})),l.createElement("aside",{className:"notes"},"1. 자바스크립트에 타입스크립트를 추가함으로써 에디터와 강하게 결합합니다. ts는 js 위에 사용하는 슈퍼셋입니다. ts만 가지고 개발할 수 있는건 아니고, js 문법에 타입을 추가할 수 있게 도와주는 도구입니다. 이런 타입스크립트의 설정 파일을 통해, 타입 언어와 비슷한 특성을 가지게 해줍니다. 변수나 함수를 사용하는 부분에서 해당 변수, 함수를 클릭하게 되면 정의가 되어있는 부분으로 이동합니다. 이런 타입 언어의 특성을 에디터가 비슷하게 지원해주는데요. 이렇게 어디서 사용, 정의가 되어있는지 알 수 있기 때문에 에디터에서 빠르게 에러를 찾고, 알려주게 됩니다. ",l.createElement("br",null),"2. 타입스크립트 코드는 원하는 어느 곳이든 맞춰서 변환시켜줄 수 있다는 것입니다. 브라우저, nodejs, deno 등등, ts를 사용할 수 있는 곳은 아주 많은데요. 원래는 js만 사용할 수 있었지만, 이제 ts는 js를 사용할 수 있는 어느 곳에서든 사용할 수 있습니다. ",l.createElement("br",null),"3. 타입스크립트는 별도의 추가 코드 없이 자바스크립트를 이해하고 타입추론을 통해 유저에게 좋은 경험을 줍니다. 이게 어떤 얘기냐면, js를 이해하고 사용할 수 있다면 ts에는 any라는 타입이 있습니다. 어떤 타입이 들어와도 사용할 수 있다는 의미의 타입인데 이런 any라는 타입으로 전체를 정의하거나, 타입을 정의하지 않아도 에러가 발생하지 않도록 해주는 설정값을 추가해서 손쉽게 ts를 추가할 수 있고, 기존에 있던 프로젝트에도 점직적 적용이 가능합니다."))),l.createElement("section",null,l.createElement("div",null,l.createElement("h2",null,"자바스크립트와 타입스크립트"),l.createElement("ul",{style:{display:"flex"}},l.createElement("li",{style:{width:"50%"}},"자바스크립트",l.createElement("ul",null,l.createElement("li",null,"동적 타입 언어",l.createElement("div",null,l.createElement("img",{src:"/img/presentation/typescript/about/why-use-typescript/java-code.jpg"}))))),l.createElement("li",{style:{width:"50%"}},"타입스크립트",l.createElement("ul",null,l.createElement("li",null,"정적 타입 언어",l.createElement("div",null,l.createElement("img",{src:"/img/presentation/typescript/about/why-use-typescript/javascript-code.jpg"}))))))),l.createElement("aside",{className:"notes"},"동적 타입 언어 - 정적 언어인 자바를 예로 들어보자면 compile 시점에 타입이 결정됩니다. 전체를 실행시켜보고 타입을 결정하는 것이 아니기 때문에 처음부터 타입을 지정해주어야 하고, 에디터에서 타입이 맞지 않은 경우 바로바로 에러인 케이스들을 알려줍니다.",l.createElement("br",null),"정적 타입 언어 - 타입스크립트는 자바스크립트를 자바처럼 쓸 수 있게 해준다고 생각하시면 됩니다. compile 시점에 타입을 체크하고, 빌드할땐 타입을 걷어내서 자바스크립트 코드만 남게해주죠. 전체를 실행시켜보고 타입을 결정하는 것이 아니기 때문에 처음부터 타입을 지정해주어야 하고, 에디터에서 타입이 맞지 않은 경우 바로바로 에러인 케이스들을 알려줍니다.",l.createElement("br",null),"--코드에 대한 설명--")),l.createElement("section",null,l.createElement("h2",null,"왜 타입스크립트를 꼭 배워야 할까요?"),l.createElement("ol",null,l.createElement("li",null,"이해"),l.createElement("li",null,"안정성"),l.createElement("li",null,"생산성")),l.createElement("div",null,l.createElement("img",{src:"/img/presentation/typescript/about/why-use-typescript/javascript-code.jpg"})),l.createElement("aside",{className:"notes"},"1. 이해",l.createElement("br",null),"협업을 할 때, 팀원이 짠 코드의 의도를 더 분명히 알 수 있습니다.",l.createElement("br",null),"2. 안정성",l.createElement("br",null),"타입이 run time 이전에 지정되기 때문에 에디터에서 에러가 바로바로 노출됩니다. 또한, 타입을 지정함으로써 다른 타입의 값을 넣었을 때 문제가 있다는 경고를 보여줍니다.",l.createElement("br",null),"3. 생산성",l.createElement("br",null),"3-1. 타입스크립트는 자바스크립트이 슈퍼셋 입니다. 그렇기 때문에 유저가 넣고싶은 부분에만 넣으면 됩니다. 물론 다 넣도록 강제할수도 있습니다. 게다가 처음부터 100% 커버할 필요도 없고 자바스크립트와 혼용이 가능합니다. 초보자라도 코드에 하나하나씩 적용해볼 수 있죠. 3-2. `타입 정의 때문에 코드가 늘어나지 않나요` 라는 생각을 할 수 있습니다. 타입 정의 코드가 늘어나도 코드의 복잡도가 올라갔을 때, 타입의 양보다 훨씬 더 효율을 높일 수 있습니다. 게다가 리얼 환경에 배포하기 전 build를 하면 타입스크립트에서 자바스크립트로 결과물이 나오면서 타입들은 모두 지워지게 됩니다. 불필요한 코드를 남겨둘 필욘 없으니까요. 혹시나 라이브러리를 만드는거라면 남겨두는 옵션을 줄수도 있습니다.")),l.createElement("section",null,l.createElement("h1",null,"끝"),l.createElement("div",null,"감사합니다."))))}},xbwu:function(e,t,n){"use strict";var l=n("q1tI"),a=n("1Yd/"),r=n("COYA");t.a=function(e){var t=e.pathname,n=e.description,i=e.children,c=Object(l.useState)(!1),o=c[0],p=c[1],E=r.b.find((function(e){return e.path===Object(r.c)(t)})),u=!1,m=setInterval(Object(l.useCallback)((function(){"undefined"!=typeof window&&(window.Reveal&&!u&&(T(),u=!0),window.Reveal&&!o&&(window.Reveal.isReady()?(console.log("ready"),clearInterval(m),p(!0)):T()))}),[o]),300),T=function(){Reveal.initialize({dependencies:[{src:"/js/presentation/notes.min.js",async:!0},{src:"/js/presentation/highlight.min.js",async:!0,callback:function(){hljs.initHighlightingOnLoad()}}],minScale:.66,maxScale:.66})};return Object(l.useEffect)((function(){var e;o&&(console.log("layout"),null===(e=window.Reveal)||void 0===e||e.layout())}),[o]),l.createElement(l.Fragment,null,l.createElement(a.a,{title:null==E?void 0:E.title,description:n,link:s.link,script:s.script}),l.createElement("div",{className:"reveal",style:{position:"absolute",display:o?"block":"none"}},i))};var s={link:[{rel:"stylesheet",href:"/css/presentation/reveal.min.css"},{rel:"stylesheet",href:"/css/presentation/black.min.css"},{rel:"stylesheet",href:"/css/presentation/zenburn.min.css"}],script:[{src:"/js/presentation/reveal.min.js"},{src:"/js/presentation/head.min.js"}]}}}]);
//# sourceMappingURL=component---src-pages-presentation-typescript-about-why-use-typescript-tsx-46103da1c9b9715f8607.js.map