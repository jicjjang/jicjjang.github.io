{"version":3,"sources":["webpack:///./src/configs/urls.ts","webpack:///./src/pages/presentation/typescript/about/worries-of-users-who-do-not-use-typescript.tsx","webpack:///./src/components/layout/Presentation/index.tsx"],"names":["PAGE_URL","HOME","ARCHIVE","RESUME","PRESENTATION","PRESENTATION_1","PRESENTATION_2","PRESENTATION_3","PRESENTATION_4","PRESENTATION_5","PRESENTATION_6","PRESENTATION_7","PRESENTATION_8","PRESENTATION_9","PRESENTATION_TYPESCRIPT__OT","PRESENTATION_TYPESCRIPT__WHY_USE_TYPESCRIPT","PRESENTATION_TYPESCRIPT__WORRIES_OF_USERS_WHO_DO_NOT_USE_TYPESCRIPT","PRESENTATION_TYPESCRIPT__HOW_WHEN_USE_TYPESCRIPT","PRESENTATION_DATA","path","title","date","tags","removeTrailingSlash","endsWith","slice","typescriptAboutWorriesOfUsersWhoDoNotUseTypescript","pLocation","location","pathname","className","src","alt","style","width","margin","background","border","href","target","PresentationLayout","description","children","useState","isLoaded","setIsLoaded","data","find","isInitLoadedReveal","repeatEvent","setInterval","useCallback","window","Reveal","initLoadedReveal","isReady","console","log","clearInterval","initialize","dependencies","async","callback","hljs","initHighlightingOnLoad","minScale","maxScale","useEffect","layout","link","REVEAL_LIB","script","position","display","rel"],"mappings":"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","file":"component---src-pages-presentation-typescript-about-worries-of-users-who-do-not-use-typescript-tsx-90983671bf1b36371ac9.js","sourcesContent":["export const PAGE_URL = {\n  HOME: '/',\n  ARCHIVE: '/archive',\n  RESUME: '/resume',\n  PRESENTATION: '/presentation',\n  PRESENTATION_1: '/presentation/1',\n  PRESENTATION_2: '/presentation/2',\n  PRESENTATION_3: '/presentation/3',\n  PRESENTATION_4: '/presentation/4',\n  PRESENTATION_5: '/presentation/5',\n  PRESENTATION_6: '/presentation/6',\n  PRESENTATION_7: '/presentation/7',\n  PRESENTATION_8: '/presentation/8',\n  PRESENTATION_9: '/presentation/9',\n  PRESENTATION_TYPESCRIPT__OT: '/presentation/typescript/ot',\n  PRESENTATION_TYPESCRIPT__WHY_USE_TYPESCRIPT: '/presentation/typescript/about/why-use-typescript',\n  PRESENTATION_TYPESCRIPT__WORRIES_OF_USERS_WHO_DO_NOT_USE_TYPESCRIPT:\n    '/presentation/typescript/about/worries-of-users-who-do-not-use-typescript',\n  PRESENTATION_TYPESCRIPT__HOW_WHEN_USE_TYPESCRIPT: '/presentation/typescript/about/how-when-use-typescript'\n};\n\nexport interface IPresentationData {\n  title: string;\n  path: string;\n  tags: string[];\n  date: string;\n}\nexport const PRESENTATION_DATA: IPresentationData[] = [\n  {\n    path: PAGE_URL.PRESENTATION_1,\n    title: 'React.js basic - NHN벅스 팀 세미나 발표 자료',\n    date: 'Nov, 23, 2016',\n    tags: ['react', 'nhn', 'bugs']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_2,\n    title: 'Vue.js basic - NHN벅스 팀 세미나 발표 자료',\n    date: 'Apr, 08, 2017',\n    tags: ['vue', 'nhn', 'bugs']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_3,\n    title: '현실적인 개발로 먹고살기',\n    date: 'July, 15, 2017',\n    tags: ['developer', 'kookmin', 'university']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_4,\n    title: 'How to use RxJs - NHN벅스 팀 세미나 발표 자료',\n    date: 'Nov, 30, 2017',\n    tags: ['rxjs', 'nhn', 'bugs']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_5,\n    title: 'Vue pwa 시작하기 - Vuetiful korea 3rd 발표자료',\n    date: 'Nov, 30, 2017',\n    tags: ['vue', 'pwa', 'vuetifulkorea', '3rd']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_6,\n    title: 'Graphql 시작하기 (server) - NHN벅스 팀 세미나 발표 자료',\n    date: 'Mar, 05, 2018',\n    tags: ['graphql', 'server', 'nhn', 'bugs']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_7,\n    title: 'Graphql 시작하기 (client) - NHN벅스 팀 세미나 발표 자료',\n    date: 'Mar, 06, 2018',\n    tags: ['graphql', 'client', 'nhn', 'bugs']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_8,\n    title: 'Apollo로 알아보는 Vue in the GraphQL - Vuetiful korea 4th 발표자료',\n    date: 'Apr, 16, 2018',\n    tags: ['vue', 'graphql', 'apollo', 'vuetifulkorea', '4th']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_9,\n    title: 'Vuetiful korea 5회 세미나 내용 정리',\n    date: 'Aug, 15, 2018',\n    tags: ['vue', 'vuetifulkorea', '5th']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_TYPESCRIPT__OT,\n    title: '기초부터 시작하는 typescript 강의 - ot',\n    date: 'Feb, 01, 2023',\n    tags: ['typescript', 'inflearn', 'ot']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_TYPESCRIPT__WHY_USE_TYPESCRIPT,\n    title: '기초부터 시작하는 typescript 강의 - 타입스크립트란? - 타입스크립트를 꼭 배워야 하나요?',\n    date: 'Feb, 02, 2023',\n    tags: ['typescript', 'inflearn', 'about', 'why use typescript']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_TYPESCRIPT__WORRIES_OF_USERS_WHO_DO_NOT_USE_TYPESCRIPT,\n    title: '기초부터 시작하는 typescript 강의 - 타입스크립트란? - 타입스크립트를 사용하지 않는 유저들의 걱정',\n    date: 'Feb, 03, 2023',\n    tags: ['typescript', 'inflearn', 'about', 'worries of users who do not use typescript']\n  },\n  {\n    path: PAGE_URL.PRESENTATION_TYPESCRIPT__HOW_WHEN_USE_TYPESCRIPT,\n    title: '기초부터 시작하는 typescript 강의 - 타입스크립트란? - 언제, 어떻게 사용할 수 있나요?',\n    date: 'Feb, 04, 2023',\n    tags: ['typescript', 'inflearn', 'about', 'how, when use typescript']\n  }\n];\n\nexport const compareTrailingSlash = (prevUrl: string, nextUrl: string) =>\n  (prevUrl.endsWith('/') ? prevUrl.slice(0, -1) : prevUrl) === (nextUrl.endsWith('/') ? nextUrl.slice(0, -1) : nextUrl);\n\nexport const removeTrailingSlash = (path: string) => (path.endsWith('/') ? path.slice(0, -1) : path);\n","import * as React from 'react';\nimport { PageProps } from 'gatsby';\n\nimport PresentationLayout from '~/components/layout/Presentation';\n\nexport default function typescriptAboutWorriesOfUsersWhoDoNotUseTypescript({ location: pLocation }: PageProps) {\n  return (\n    <PresentationLayout pathname={pLocation.pathname}>\n      <div className=\"slides\">\n        <section>\n          <div>\n            <img\n              src=\"/img/presentation/typescript/logo.png\"\n              alt=\"logo\"\n              style={{ width: '50%', margin: '0 auto', background: 'none', border: 'none' }}\n            />\n            <p style={{ margin: '20px 0 0 0' }}>기초부터 시작하는 타입스크립트 강의</p>\n            <p style={{ margin: '20px 0 0 0' }}>타입스크립트란? - 타입스크립트를 사용하지 않는 유저들의 걱정</p>\n          </div>\n          <aside className=\"notes\">\n            여러가지 이유로 타입스크립트를 배우는걸 차일피일 미루고, 적용하는것에 부담을 갖는 경우가 많은데요. 어떤\n            고민이 해결되지 않아 그렇게 미루는지 하나하나 알아보겠습니다.\n          </aside>\n        </section>\n\n        <section>\n          <div>\n            <h2>1. 러닝커브가 크지 않나요?</h2>\n            <div>\n              <img\n                src=\"/img/presentation/typescript/about/worries-of-users-who-do-not-use-typescript/running-curve-code.jpg\"\n                alt=\"example\"\n              />\n            </div>\n            <aside className=\"notes\">\n              <br />\n              타입스크립트는 타입을 하나하나 적용해줄 수 있습니다. 아래 코드처럼 특정 함수에서는 타입을 지정하고, 특정\n              함수에선 타입을 지정하지 않아도 괜찮습니다. 에디터에서도 타입이 지정된 부분에 대해서만 에러가 발생하게\n              되는데 직접 적용한다면 예시 코드처럼 됩니다.\n              <br />\n              --예시코드--\n              <br />\n              에러는 타입이 지정된 코드와 연관된 부분에서만 발생하는 것을 볼 수 있습니다. 그렇기 때문에 기본적인\n              부분부터 학습하며 프로젝트에 적용할 수 있습니다. 그날그날 배운 내용을 원하는 부분에 선택적으로 적용할 수\n              있는데 러닝커브가 무작정 크다고 하긴 어렵지 않을까요? 예제코드처럼 특정 함수에는 타입 지정을, 특정\n              함수에는 타입을 지정하지 않는 방식으로 개발을 진행하면 됩니다.\n            </aside>\n          </div>\n        </section>\n\n        <section>\n          <div>\n            <h2>2. 자바처럼 타입 체크를 하게되면 run-time 언어인 자바스크립트의 장점이 없어지지 않나요?</h2>\n            <div>\n              <img\n                src=\"/img/presentation/typescript/about/worries-of-users-who-do-not-use-typescript/running-curve-code.jpg\"\n                alt=\"example\"\n              />\n            </div>\n          </div>\n          <aside className=\"notes\">\n            타입스크립트를 사용한다는 것이 `동적 타입 언어`로써의 특징을 버린다는 것은 아닙니다. `동적 타입 언어`와\n            `정적 타입 언어`의 장점을 모두 가져가겠다는 의미입니다. 자바에서는 타입을 지정하지 않는다면 에디터에서\n            에러가 발생했겠지만, 타입스크립트에서는 tsconfig를 수정하여 특정 옵션을 바꿔준다면 에디터에서 문제가\n            발생하지 않습니다. 선택적이라는 것이죠.\n            <br />\n            --예시코드--\n            <br />\n            앞에서 봤던 예시코드를 다시 보겠습니다. 에디터에서 에러가 발생한다고 알려주고 있지만, run을 하게되면\n            타입스크립트가 자바스크립트로 빌드를 하는데, build가 된 이후에는 자바스크립트 코드가 되므로 에러가 발생하지\n            않습니다.\n          </aside>\n        </section>\n\n        <section>\n          <h2>3. 업데이트는 잘 되고 있나요?</h2>\n          <div>\n            <img\n              src=\"/img/presentation/typescript/about/worries-of-users-who-do-not-use-typescript/4-9-announcement.jpg\"\n              alt=\"example\"\n            />\n          </div>\n\n          <aside className=\"notes\">\n            타입스크립트 release note - https://github.com/microsoft/TypeScript/releases 를 보면 v4.9까지 나온 상태이며,\n            마이너 버전 업데이트는 꾸준히 이뤄지고 있습니다. 업데이트는 매우 빈번히 진행되고 있습니다. 또한 업데이트에\n            맞춰 문서도 잘 정리되어 있습니다.\n            <br />\n            이미지처럼 업데이트에 대한 문서도 잘 정리되어있습니다. 이에 관해서는 추후 강의에서 한번 알아보겠습니다.\n          </aside>\n        </section>\n\n        <section>\n          <h2>4. 자바스크립트로 이미 다 만들어 왔는데, 타입스크립트를 어떻게 적용하나요?</h2>\n          <div style={{ width: '50%', margin: 'auto' }}>\n            <img\n              src=\"/img/presentation/typescript/about/worries-of-users-who-do-not-use-typescript/interface.jpg\"\n              alt=\"example\"\n            />\n          </div>\n          <aside className=\"notes\">\n            위에 말씀드렸듯이 typescript를 적용한다고 모든 부분에 타입스크립트를 한꺼번에 적용해야 하는건 아닙니다.\n            에러가 발생한다면 tsconfig를 통해 에러를 해결할 수 있으며, 순차적으로 타입을 넣어주면 됩니다. 장점중 하나인\n            동료와의 협업 시 안정성, 생산성 증가를 위해선 프로젝트에 typescript를 직접 적용해 줘야합니다. 하지만\n            라이브러리를 만든다면 어떨까요? 타입스크립트 프로젝트에서 라이브러리 코드에 접근하려 하는데 라이브러리가\n            자바스크립트라면 타입을 알 수 없기 때문에 문제가 됩니다.\n            <br />\n            프로젝트에서 해당 라이브러리의 타입만 추론할 수 있도록 도와주는 파일이 declaration 파일입니다. 그림처럼\n            인터페이스와 같은 역할을 하게 되는 것이죠. **타입스크립트 적용 (.ts) or declaration 파일 (\\*.d.ts) 생성**\n            declaration 파일은 타입스크립트를 적용시키지 않은 코드의 타입을 추론할 수 있게 도와주는 방법입니다. 아래\n            그림에서의 interface 역할을 합니다.\n          </aside>\n        </section>\n\n        <section>\n          <h2>5. 다른 타입 체킹 도구는 없나요?</h2>\n          <ol>\n            <li>JSDoc</li>\n            <li>\n              <a href=\"https://ko.reactjs.org/docs/static-type-checking.html\" target=\"_blank\">\n                Flow\n              </a>\n            </li>\n          </ol>\n          <div>\n            <img\n              src=\"/img/presentation/typescript/about/worries-of-users-who-do-not-use-typescript/other-tools.jpg\"\n              alt=\"example\"\n            />\n          </div>\n          <aside className=\"notes\">\n            유사한 목표를 지향하는 도구로는 jsdoc이 있습니다. typescript처럼 정적으로 코드를 분석하고 결과를 주는 것보단\n            이름 그대로 문서를 만들기 위한 용도입니다. 보통은 api겠죠? 하지만 명시적으로 타입을 기재해놓을 수 있고,\n            팀원들과 협업 시 도움이 됩니다. 강제적이진 않기 때문에 항상 sync에 주의해야 합니다.\n            <br />\n            React를 사용한다면 [Flow](https://flow.org/) 를 사용할 수도 있습니다. 이는 React 문서에서 살펴볼 수\n            있습니다.\n            <br />\n            추가적으로 flow는 annotation과 flow라는 워딩이 포함된 주석이 있어야지만 타입 검사를 진행함에 유의해야\n            합니다.\n          </aside>\n        </section>\n\n        <section>\n          <h1>끝</h1>\n          <div>감사합니다.</div>\n        </section>\n      </div>\n    </PresentationLayout>\n  );\n}\n","import * as React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\n\nimport SEO from '~/components/SEO';\nimport { PRESENTATION_DATA, removeTrailingSlash } from '~/configs/urls';\n\ndeclare var Reveal: RevealStatic & {\n  isReady: () => boolean;\n};\ndeclare var window: Window & {\n  Reveal?: RevealStatic & {\n    isReady: () => boolean;\n  };\n};\n\ninterface IProps {\n  pathname: string;\n  description?: string;\n}\n\nconst PresentationLayout: React.FunctionComponent<React.PropsWithChildren<IProps>> = ({\n  pathname,\n  description,\n  children\n}) => {\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n  const data = PRESENTATION_DATA.find(data => data.path === removeTrailingSlash(pathname));\n\n  let isInitLoadedReveal = false;\n  const repeatEvent = setInterval(\n    useCallback(() => {\n      if (typeof window !== 'undefined') {\n        if (window.Reveal && !isInitLoadedReveal) {\n          initLoadedReveal();\n          isInitLoadedReveal = true;\n        }\n\n        if (window.Reveal && !isLoaded) {\n          if (window.Reveal.isReady()) {\n            console.log('ready');\n            clearInterval(repeatEvent);\n            setIsLoaded(true);\n          } else {\n            initLoadedReveal();\n          }\n        }\n      }\n    }, [isLoaded]),\n    300\n  );\n\n  const initLoadedReveal = () => {\n    Reveal.initialize({\n      dependencies: [\n        { src: '/js/presentation/notes.min.js', async: true },\n        {\n          src: '/js/presentation/highlight.min.js',\n          async: true,\n          callback: () => {\n            //@ts-ignore\n            hljs.initHighlightingOnLoad();\n          }\n        }\n      ],\n      minScale: 0.66,\n      maxScale: 0.66\n    });\n  };\n\n  useEffect(() => {\n    if (isLoaded) {\n      console.log('layout');\n      window.Reveal?.layout(); // display가 block이 된 다음 layout을 다시 해야함\n    }\n  }, [isLoaded]);\n\n  return (\n    <>\n      <SEO title={data?.title} description={description} link={REVEAL_LIB.link} script={REVEAL_LIB.script} />\n      <div className=\"reveal\" style={{ position: 'absolute', display: isLoaded ? 'block' : 'none' }}>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default PresentationLayout;\n\n/**\n * @description 스크립트를 히스토리 이동 시, 여러번 호출하는게 낭비같아서 window.Reveal이 있을 시 로드를 안하게 했더니 initialize나 layout을 다시 해도 화면이 안나옴\n */\nconst REVEAL_LIB = {\n  link: [\n    { rel: 'stylesheet', href: '/css/presentation/reveal.min.css' },\n    { rel: 'stylesheet', href: '/css/presentation/black.min.css' },\n    { rel: 'stylesheet', href: '/css/presentation/zenburn.min.css' }\n  ],\n  script: [\n    {\n      src: '/js/presentation/reveal.min.js'\n    },\n    {\n      src: '/js/presentation/head.min.js'\n    }\n  ]\n};\n"],"sourceRoot":""}