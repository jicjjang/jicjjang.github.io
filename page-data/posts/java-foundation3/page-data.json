{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/java-foundation3","result":{"data":{"site":{"siteMetadata":{"title":"June"}},"markdownRemark":{"id":"c7e7bbb4-cf5b-54b8-aadf-59f459938e4b","excerpt":"제네릭 제한과 하면 안되는 부분에 대해 간략히 알아보겠습니다. 원래 Wrapper 클래스로 써야 하지만,  에서 3 같은 경우는\nauto-boxing으로 자동으로 Integer 형태로 바뀝니다. 위 Paper 클래스에서 extends가 없으면 당연하게 getLevel…","html":"<p>제네릭 제한과 하면 안되는 부분에 대해 간략히 알아보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">generic</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Info</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> levelInfo <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Info</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> rank<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">levelInfo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> rank<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rank <span class=\"token operator\">=</span> rank<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rank<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Paper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span><span class=\"token punctuation\">></span></span>  <span class=\"token comment\">// Info가 interface여도 상관 없이 extends로 받아옴.</span>\n<span class=\"token punctuation\">{</span>                               <span class=\"token comment\">// super 명령어는 extends 와 반대로, 해당 클래스만 제외한다는 뜻.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">T</span> info1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">S</span> info2<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Paper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> info1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">S</span> info2<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>info1 <span class=\"token operator\">=</span> info1<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>info2 <span class=\"token operator\">=</span> info2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">U</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">printInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">U</span> info<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LimitsGeneric</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        levelInfo li <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">levelInfo2</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Paper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>levelInfo<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paper2</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>levelInfo<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Paper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> p3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"String\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error! Info를 상속받은 클래스만 사용 가능.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>원래 Wrapper 클래스로 써야 하지만, <code class=\"language-text\">Paper&lt;String, Integer&gt; p3 = new Paper&lt;String, Integer&gt; (&quot;String&quot;, 3);</code> 에서 3 같은 경우는\nauto-boxing으로 자동으로 Integer 형태로 바뀝니다.</p>\n<hr>\n<p>위 Paper 클래스에서 extends가 없으면 당연하게 getLevel() 메서드는 사용할 수 없습니다.<br>\n평소에 <code class=\"language-text\">class Paper&lt;T&gt;</code>라고 쓰는 형태는 사실 아래와 같은 형태를 축소해 놓은 것이기 때문입니다.\n그래서 info는 Object의 기본 메서드만 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Paper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> info<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        info<span class=\"token punctuation\">.</span><span class=\"token function\">getLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 사용 불가 Object형식만 가능. getLevel은 Info를 상속받은 애들만 구현했으니까.</span>\n     <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<p>제가 보던 책에도 없던 부분이지만 중요하게 쓰일 수 있을 법 한 부분이었습니다.</p>","frontmatter":{"title":"<자바기초> generic에서 타입 제한하기","date":"August 30, 2015","tags":["java"]}}},"pageContext":{"slug":"/posts/java-foundation3","previous":{"fields":{"slug":"/posts/java-foundation2"},"frontmatter":{"title":"<자바기초> map에서 iterator 사용하기"}},"next":{"fields":{"slug":"/posts/java-foundation4"},"frontmatter":{"title":"<자바기초> component에 색상 넣기"}}}},"staticQueryHashes":["1576648375","764694655"]}