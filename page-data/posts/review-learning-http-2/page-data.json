{"componentChunkName":"component---src-templates-post-template-tsx","path":"/posts/review-learning-http-2","result":{"data":{"site":{"siteMetadata":{"title":"June"}},"markdownRemark":{"id":"be679b62-ac3b-5f7f-88b4-ffc6d9febee0","excerpt":"요즘 블로그 개편 후 거의 매일 포스팅을 만들고 있는데요! 한빛미디어에서 진행하는\n세번째 IT관련 도서 리뷰!  도서에 대한 리뷰를 진행하겠습니다.\n예전에 HTTP/1.1까지 구매했었는데 (대략 1000페이지가 넘는...) HTTP/…","html":"<p>요즘 블로그 개편 후 거의 매일 포스팅을 만들고 있는데요! 한빛미디어에서 진행하는\n세번째 IT관련 도서 리뷰! <code class=\"language-text\">[Learning HTTP/2]</code> 도서에 대한 리뷰를 진행하겠습니다.\n예전에 HTTP/1.1까지 구매했었는데 (대략 1000페이지가 넘는...) HTTP/2에 대한 도서를\n바로 리뷰할 수 있게되어 신청하게 되었습니다. 책에 대한 설명, 시작하겠습니다.</p>\n<hr>\n<p>사실 HTTP라는 것은 구현체가 아닌 약속(Protocol)이기 때문에 그냥 보는 것으로는\n지루할 수 밖에 없습니다. 하지만 웹을 개발하는 입장에서 절대 빼놓고 갈 순 없죠. https에 대한\n관심이 사실 억지로라도(점유율이 가장 높은 브라우저인 크롬에서 http 페이지에 대해서 안전하지\n않음 메세지를 띄워줍니다.) 가질 수밖에 없는 상황에서 한번 중요한 부분은 짚어보겠습니다.</p>\n<h2 id=\"Chap-1-HTTP의-진화\" style=\"position:relative;\">Chap. 1 HTTP의 진화<a href=\"#Chap-1-HTTP%EC%9D%98-%EC%A7%84%ED%99%94\" aria-label=\"Chap 1 HTTP의 진화 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>HTTP 자체의 역사입니다. HTTP/2가 어떻게 생기게 되었는지 알 수 있습니다.</p>\n<h2 id=\"Chap-2-HTTP2-맛보기\" style=\"position:relative;\">Chap. 2 HTTP/2 맛보기<a href=\"#Chap-2-HTTP2-%EB%A7%9B%EB%B3%B4%EA%B8%B0\" aria-label=\"Chap 2 HTTP2 맛보기 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>https는 기본적으로 인증서를 거쳐서 통신을 하게 됩니다. 실제 웹 서비스에서 사영하려는 인증서에\n대한 사용법과 설명에 대해 간단히 알려줍니다.</p>\n<h2 id=\"Chap-3-웹을-파헤치는-이유와-방법\" style=\"position:relative;\">Chap. 3 웹을 파헤치는 이유와 방법<a href=\"#Chap-3-%EC%9B%B9%EC%9D%84-%ED%8C%8C%ED%97%A4%EC%B9%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EC%99%80-%EB%B0%A9%EB%B2%95\" aria-label=\"Chap 3 웹을 파헤치는 이유와 방법 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>이 장에서는 http에서의 이슈와 그를 https에서 어떻게 해결하려고 HTTP/2를 정의했는지에 대해\n알려줍니다. 가장 신경이 쓰였던 것은 HTTP/1.1에서는 이미지로 인한 connection의 시간을 줄이기\n위해 이미지 스프라이팅을 했었는데, Request에 대한 병렬 처리가 가능해졌기 때문에\n(현재 브라우저 단에서 받아들일 수 있는 최대 병렬처리 개수는 6개) https에서 이 기능은\n<code class=\"language-text\">안티패턴</code>이 되었습니다!!! 이 뿐만 아니라 안티패턴이 된 추가적인 요소들이 있어서 https를\n사용하는 입장에서 확실히 알고넘어가야 겠더군요.</p>\n<h2 id=\"Chap-4-HTTP2로의-전환\" style=\"position:relative;\">Chap. 4 HTTP/2로의 전환<a href=\"#Chap-4-HTTP2%EB%A1%9C%EC%9D%98-%EC%A0%84%ED%99%98\" aria-label=\"Chap 4 HTTP2로의 전환 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>http를 넘어서 https 적용 시, 알고가야 할 설정이나, 인증서에 대한 설명이 있습니다.</p>\n<h2 id=\"Chap-5-HTTP2-프로토콜\" style=\"position:relative;\">Chap. 5 HTTP/2 프로토콜<a href=\"#Chap-5-HTTP2-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\" aria-label=\"Chap 5 HTTP2 프로토콜 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>네트워크 레벨의 이야이가 나옵니다. Request, Response의 헤더를 집중적으로 분석해주고,\nhttp와 https일때의 차이를 설명해줍니다. 그리고 HTTP/2의 가장 메인 기능이라고 할 수 있는\n<code class=\"language-text\">서버 푸시</code>에 대한 설명이 나옵니다. 기존 폴링방식(Client -> Server)이었던 데이터 교환이\n반대로 된다는 얘긴데 사실상 현 웹 체계에서는 힘듭니다. 꼼수로 timeout이나 특정 함수,\niframe 같은 곳에서 서버에 사용자가 인지하지 못한 시간에 Request를 해서 자동으로 Response가\n오는 듯한 효과를 줄 수만 있었죠. 앞으로의 업데이트에서 이 부분이 어떻게 구체적으로 정의되는지\n저는 가장 흥미롭게 보고있습니다.</p>\n<h2 id=\"Chap-6-HTTP2-성능\" style=\"position:relative;\">Chap. 6 HTTP/2 성능<a href=\"#Chap-6-HTTP2-%EC%84%B1%EB%8A%A5\" aria-label=\"Chap 6 HTTP2 성능 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>생각보다 깜짝 놀란 부분인데 https가 대부분 브라우저에서 http에 비해 전혀 느려지지 않더군요\n(...왜 내가하는건...) http, https 모두 지원하는 상황에서의 최적화 또한 고려해 볼 문제입니다.\n앞서 말한 안티패턴과 서버 푸시에 대해 다시한 번 나오는데 이전보다는 구체적인 해결방법을 알려줍니다.</p>\n<h2 id=\"Chap-7-HTTP2-구현\" style=\"position:relative;\">Chap. 7 HTTP/2 구현<a href=\"#Chap-7-HTTP2-%EA%B5%AC%ED%98%84\" aria-label=\"Chap 7 HTTP2 구현 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>...HTTP/2를 직접 구현해주실 갓을 위한 내용이네요;;; 계속 나오지만 <code class=\"language-text\">RFC7540</code> 버전에 대한\n얘기가 계속 나옵니다. 이 버전의 규약에 대해 깊이 공부해 볼 필요가 있습니다.</p>\n<h2 id=\"Chap-8-HTTP2-디버깅하기-Chap-9-다음은-무엇인가\" style=\"position:relative;\">Chap. 8 HTTP/2 디버깅하기, Chap. 9 다음은 무엇인가<a href=\"#Chap-8-HTTP2-%EB%94%94%EB%B2%84%EA%B9%85%ED%95%98%EA%B8%B0-Chap-9-%EB%8B%A4%EC%9D%8C%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"Chap 8 HTTP2 디버깅하기 Chap 9 다음은 무엇인가 permalink\" class=\"autolink-headers-- after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>...</p>\n<hr>\n<p>기본적으로 https에서 강화된 보안때문에 속도가 상당히 느려지는 케이스가 있었는데,\n이러한 경우들 모두 최적화에 대한 신경을 쓰지 않아 발생했던 이슈들이었다는 것을\n책을 보며 깨달았습니다. 또한 HTTP/1.1에서는 권장 사항으로 여겨지턴 패턴이 HTTP/2에서는\n안티패턴이 된 것들이 더러 있어 HTTP 메이저 버전 업데이트에 얼마나 많은 노력이 들어갔는지\n(20년 만의 업데이트...) 다시한 번 놀라울 따름이네요.</p>","frontmatter":{"title":"[Review] learning http/2","date":"February 14, 2018","tags":["review","http2"]}}},"pageContext":{"slug":"/posts/review-learning-http-2","previous":{"fields":{"slug":"/posts/prototype-inheritance-model"},"frontmatter":{"title":"자바스크립트 상속 모델"}},"next":{"fields":{"slug":"/posts/review-functional-programming"},"frontmatter":{"title":"[Review] 함수형 자바스크립트"}}}},"staticQueryHashes":["1576648375","1963346411"]}